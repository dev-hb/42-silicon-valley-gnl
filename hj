\n
line text 2
line text 3
line text 4
line text 5
line text 6
line text 7


BUFF SIZE 32

char *buffer[BUFF_SIZE]
char *buffer[32]
bool isThereaNewLine = false;

1st time = Buffer -> "\nline text 1 \nline text 2\n line text 3"

Buffer -> "line text 1 \nline text 2\n line text 3"

--- cortar hasta encontra el primer new line---

Buffer -> "line text 2\n line text 3"
tmp -> "line text 1 "


----- segundo caso donde no encontramos la linea en la primera linea --------


check if my buffer has a new line

Cantidad de carecteres leidos = READ (FD, BUFFER, BUFFER_SIZE)


FD - archivo


BUFFER - almacenar el READ
TMP - concatinar el buffer


	//int veces_esta_funcion_es_llamada = 

void do_something(int numero)
{
	static int numero_funcion = 1; // 2 
	numero_funcion = numero + numero_funcion;
	printf(numero_funcion);
}


numero = 1, numero_funcion = 2; 
numero = 2,


HEAP

----- STACK-----
0x42424242 numero_funcion = 1

0x44545454 content_file_descriptor (char * [FD_SIZE] * 8)
 0x44545454 ~~~ 0x445455e4

content_file_descriptor[1] = CONTENIDO DE ARCHIVO 1

------
MAIN
OPEN
GET_NEXT_LINE
LOAD
READ
WRITE
GET_NEXT_LINE